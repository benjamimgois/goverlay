name: AppImage CI

# Controls when the action will run.
on:
  push:
    paths-ignore: ["**/README.md"]
  pull_request:
    paths-ignore: ["**/README.md"]
  workflow_dispatch: {}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: "${{ matrix.name }} (${{ matrix.arch }})"
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        include:
          - runs-on: ubuntu-latest
            name: "Build goverlay appimage"
            arch: x86_64
#          - runs-on: ubuntu-24.04-arm
#            name: "Build goverlay appimage"
#            arch: aarch64
    container: ghcr.io/pkgforge-dev/archlinux:latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Get dependencies
        run: |
          chmod +x ./appimage/get-dependencies.sh
          ./appimage/get-dependencies.sh

      # Runs a set of commands using the runners shell
      - name: Build GOverlay
        run: |
          make LAZBUILDOPTS=--lazarusdir=/usr/lib/lazarus
          make prefix=/usr libexecdir=/lib install

      - name: Make AppImage
        run: |
          chmod +x ./appimage/goverlay-appimage.sh
          ./appimage/goverlay-appimage.sh
          mkdir ./dist
          echo "$PWD"
          ls .
          sha256sum *.AppImage*
          mv *.AppImage* ./dist

      - name: Upload artifact
        uses: actions/upload-artifact@v4.4.3
        with:
          name: AppImage-${{ matrix.arch }}
          path: "dist"

  release_nightly:
    name: "nightly release"
    needs: [build]
    permissions:
      actions: read
      security-events: write
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4.1.9
        with:
          name: AppImage-x86_64

#      - uses: actions/download-artifact@v4.1.9
#        with:
#          name: AppImage-aarch64

      - name: Delete previous pre-release
        if: ${{ github.ref_name == 'main' }}
        run: |
          gh release delete "nightly" --repo "${GITHUB_REPOSITORY}" --cleanup-tag  -y
          sleep 5
        env:
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        continue-on-error: true

      - name: Create pre-release
        uses: softprops/action-gh-release@v2
        if: ${{ github.ref_name == 'main' }}
        with:
          name: "Goverlay Nightly"
          tag_name: "nightly"
          prerelease: true
          draft: false
          generate_release_notes: true
          make_latest: false
          files: |
            *.AppImage*
