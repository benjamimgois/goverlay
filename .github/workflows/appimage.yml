name: AppImage CI

# Controls when the action will run.
on:
  push:
    paths-ignore: ["**/README.md"]
  pull_request:
    paths-ignore: ["**/README.md"]
  workflow_dispatch: {}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: "build goverlay appimage"
    runs-on: ubuntu-latest
    container: artixlinux/artixlinux:latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Get dependencies
        run: |
          sed -i 's/DownloadUser/#DownloadUser/g' /etc/pacman.conf
          pacman -Syu --noconfirm \
            base-devel \
            git \
            cmake \
            strace \
            patchelf \
            curl \
            wget \
            git \
            artix-archlinux-support \
            mesa \
            mangohud \
            xorg-server-xvfb \
            vulkan-radeon \
            vulkan-intel \
            vulkan-nouveau

          pacman-key --init && pacman-key --populate archlinux
          printf "\n[extra]\nInclude = /etc/pacman.d/mirrorlist-arch\n" | tee -a /etc/pacman.conf
          cat /etc/pacman.conf
          sudo sed -i 's/NoExtract/#NoExtract/g' /etc/pacman.conf

          pacman -Syu --noconfirm \
            zsync \
            qt6ct \
            glu \
            qt6pas \
            vulkan-tools \
            qt6-wayland \
            lazarus \
            pciutils

      - name: Install debloated llvm-libs
        run: |
          LLVM_URL="https://github.com/pkgforge-dev/llvm-libs-debloated/releases/download/continuous/llvm-libs-nano-x86_64.pkg.tar.zst"
          wget --retry-connrefused --tries=30 "$LLVM_URL" -O ./llvm-libs.pkg.tar.zst
          pacman -U --noconfirm ./llvm-libs.pkg.tar.zst
          rm -f ./llvm-libs.pkg.tar.zst
  
      - name: Install iculess libxml2
        run: |
          LIBXML_URL="https://github.com/pkgforge-dev/llvm-libs-debloated/releases/download/continuous/libxml2-iculess-x86_64.pkg.tar.zst"
          wget --retry-connrefused --tries=30 "$LIBXML_URL" -O ./libxml2-iculess.pkg.tar.zst
          pacman -U --noconfirm ./libxml2-iculess.pkg.tar.zst
          rm -f ./libxml2-iculess.pkg.tar.zst

      - name: Install iculess qt6-base
        run: |
          QT6_URL="https://github.com/pkgforge-dev/llvm-libs-debloated/releases/download/continuous/qt6-base-iculess-x86_64.pkg.tar.zst"
          wget --retry-connrefused --tries=30 "$QT6_URL" -O ./qt6-base.pkg.tar.zst
          pacman -U --noconfirm ./qt6-base.pkg.tar.zst
          rm -f ./qt6-base.pkg.tar.zst

      # Runs a set of commands using the runners shell
      - name: Build GOverlay
        run: |
          make LAZBUILDOPTS=--lazarusdir=/usr/lib/lazarus
          make prefix=/usr libexecdir=/lib install

      - name: Make AppImage
        run: |
          chmod +x ./appimage/goverlay-appimage.sh
          ./appimage/goverlay-appimage.sh
          mkdir ./dist
          echo "$PWD"
          ls .
          sha256sum *.AppImage*
          mv *.AppImage* ./dist

      - name: Upload artifact
        uses: actions/upload-artifact@v4.4.3
        with:
          name: AppImage
          path: "dist"

  release_nightly:
    name: "nightly release"
    needs: [build]
    permissions:
      actions: read
      security-events: write
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4.1.8
        with:
          name: AppImage

      - name: Delete previous pre-release
        if: ${{ github.ref_name == 'main' }}
        run: |
          gh release delete "nightly" --repo "${GITHUB_REPOSITORY}" --cleanup-tag  -y
          sleep 5
        env:
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        continue-on-error: true

      - name: Create pre-release
        uses: softprops/action-gh-release@v2
        if: ${{ github.ref_name == 'main' }}
        with:
          name: "Goverlay Nightly"
          tag_name: "nightly"
          prerelease: true
          draft: false
          generate_release_notes: true
          make_latest: false
          files: |
            *.AppImage*
